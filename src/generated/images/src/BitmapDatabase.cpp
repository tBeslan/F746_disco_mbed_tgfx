// 4.14.0 0xb8be3cfd
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_blue_backgrounds_main_bg_texture_480x272px[]; // BITMAP_BLUE_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID = 0, Size: 480x272 pixels
extern const unsigned char image_blue_buttons_round_edge_small[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID = 1, Size: 170x60 pixels
extern const unsigned char image_blue_buttons_round_edge_small_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID = 2, Size: 170x60 pixels
extern const unsigned char image_blue_clocks_backgrounds_clock_standard_background[]; // BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID = 3, Size: 233x243 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_hour_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID = 4, Size: 15x61 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_minute_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID = 5, Size: 15x77 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_second_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID = 6, Size: 7x86 pixels
extern const unsigned char image_blue_slider_horizontal_small_indicators_slider_horizontal_small_round_knob[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID = 7, Size: 54x34 pixels
extern const unsigned char image_blue_slider_horizontal_small_slider_horizontal_small_round_back[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID = 8, Size: 172x20 pixels
extern const unsigned char image_blue_slider_horizontal_small_slider_horizontal_small_round_fill[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_FILL_ID = 9, Size: 172x20 pixels
extern const unsigned char image_blue_textures_carbon_fibre[]; // BITMAP_BLUE_TEXTURES_CARBON_FIBRE_ID = 10, Size: 24x22 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_blue_backgrounds_main_bg_texture_480x272px, 0, 480, 272, 0, 0, 480, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 272, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { image_blue_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 50, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_backgrounds_clock_standard_background, 0, 233, 243, 43, 42, 147, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 149, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_hour_hand, 0, 15, 61, 3, 6, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 43, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_minute_hand, 0, 15, 77, 3, 6, 9, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 59, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_second_hand, 0, 7, 86, 2, 2, 3, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 81, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_small_indicators_slider_horizontal_small_round_knob, 0, 54, 34, 8, 4, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_small_slider_horizontal_small_round_back, 0, 172, 20, 10, 0, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_small_slider_horizontal_small_round_fill, 0, 172, 20, 10, 0, 152, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_textures_carbon_fibre, 0, 24, 22, 0, 0, 24, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 22, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
